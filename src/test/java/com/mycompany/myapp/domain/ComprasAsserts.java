package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ComprasAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComprasAllPropertiesEquals(Compras expected, Compras actual) {
        assertComprasAutoGeneratedPropertiesEquals(expected, actual);
        assertComprasAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComprasAllUpdatablePropertiesEquals(Compras expected, Compras actual) {
        assertComprasUpdatableFieldsEquals(expected, actual);
        assertComprasUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComprasAutoGeneratedPropertiesEquals(Compras expected, Compras actual) {
        assertThat(expected)
            .as("Verify Compras auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComprasUpdatableFieldsEquals(Compras expected, Compras actual) {
        assertThat(expected)
            .as("Verify Compras relevant properties")
            .satisfies(e -> assertThat(e.getDetalle()).as("check detalle").isEqualTo(actual.getDetalle()))
            .satisfies(e -> assertThat(e.getCantidad()).as("check cantidad").isEqualTo(actual.getCantidad()))
            .satisfies(e -> assertThat(e.getPrecio()).as("check precio").isEqualTo(actual.getPrecio()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertComprasUpdatableRelationshipsEquals(Compras expected, Compras actual) {
        // empty method
    }
}
